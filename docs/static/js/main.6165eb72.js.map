{"version":3,"file":"static/js/main.6165eb72.js","mappings":"8IAGA,MA6CMA,EAASC,EAAAA,QAAAA,OAAkB,CAC/BC,UAAW,CACTC,OAAQ,GACRC,YAAa,EACbC,YAAa,QAEfC,IAAK,CACHC,cAAe,OAEjBC,KAAM,CACJC,KAAM,EACNC,QAAS,EACTC,UAAW,SACXP,YAAa,EACbC,YAAa,QAEfO,WAAY,CACVC,WAAY,OACZC,gBAAiB,WAEnBC,WAAY,CACVD,gBAAiB,WAEnBE,SAAU,CACRF,gBAAiB,WAEnBG,WAAY,CACVC,SAAU,GACVL,WAAY,UAIhB,EA7EwBM,EAAGC,SAAQC,SAAQC,UAASC,sBAAqBC,kBAQrEC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOE,UAAU0B,SAAA,EAE5BH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOM,IAAIsB,SAAA,EACtBC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO,CAAC3B,EAAOQ,KAAMR,EAAOY,YAAYgB,SAAC,eAC9CN,EAAQS,KAAIC,IACXH,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAAuBH,MAAO,CAAC3B,EAAOQ,KAAMR,EAAOY,YAAYgB,SAAEI,GAA3D,UAAUA,UAKxBX,EAAOU,KAAI,CAACE,EAAOC,KAClBT,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAsBC,MAAO3B,EAAOM,IAAIsB,SAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO,CAAC3B,EAAOQ,KAAMR,EAAOY,YAAYgB,SAAEK,IAC/CX,EAAQS,KAAI,CAACC,EAAKG,KACjB,MAAMC,EAAgBb,EAAoBS,GACpCK,EAAejB,EAAOc,IAAYd,EAAOc,GAAUC,IAAiB,EAE1E,OACEN,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAEfX,MAAO,CACL3B,EAAOQ,KACPR,EAAOe,WACU,IAAjBsB,GAAsBrC,EAAOgB,UAE/BuB,QAASA,IAhCHC,EAACN,EAAUC,EAAUC,KACvC,MAAMC,EAAejB,EAAOc,GAAUC,GAEtCX,EAAYU,EAAUC,EADLE,EAAe,EAAIA,EAAe,EAAID,IA8B5BI,CAAYN,EAAUC,EAAUC,GAAeR,UAE9DC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOiB,WAAWW,SAAES,KAR5B,QAAQJ,KAASD,UARnB,OAAOC,U,uBCZX,SAASQ,GAAc,IACpCC,EACAT,MAAOU,EACPC,OAAQC,EAAa,cACrBC,EAAgB,CAAEb,MAAO,CAAC,EAAGW,OAAQ,CAAC,GAAG,QACzCG,EAAO,OACPC,EAAM,UACNC,IAEA,MAAOhB,EAAOiB,IAAYC,EAAAA,EAAAA,UAASR,GAAgB,KAC5CC,EAAQQ,IAAaD,EAAAA,EAAAA,UAASN,GAAiB,KAE/CQ,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,KACpCI,EAAUC,IAAeL,EAAAA,EAAAA,UAAS,KAClCM,EAAYC,IAAiBP,EAAAA,EAAAA,UAAS,KACtCQ,EAAWC,IAAgBT,EAAAA,EAAAA,UAAS,KAE3CU,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAKf,EAAQd,MAAM8B,QAAOC,GAAkC,IAA7BlB,EAAcb,QAAQ+B,KACrDC,EAAKlB,EAAQd,MAAM8B,QAAOC,GAAkC,IAA7BlB,EAAcb,QAAQ+B,KACrDE,EAAKnB,EAAQH,OAAOmB,QAAOI,GAAmC,IAA9BrB,EAAcF,SAASuB,KACvDC,EAAKrB,EAAQH,OAAOmB,QAAOI,GAAmC,IAA9BrB,EAAcF,SAASuB,KAE7Db,EAAaQ,GACbN,EAAYS,GACZP,EAAcQ,GACdN,EAAaQ,KACZ,CAACtB,EAAeC,IAEnB,MAAMsB,EAAYA,CAACL,EAAGM,KAChBA,GACFhB,EAAaD,EAAUU,QAAOQ,GAAKA,IAAMP,KACzCR,EAAY,IAAID,EAAUS,MAE1BR,EAAYD,EAASQ,QAAOQ,GAAKA,IAAMP,KACvCV,EAAa,IAAID,EAAWW,MAI1BQ,EAAaA,CAACL,EAAGG,KACjBA,GACFZ,EAAcD,EAAWM,QAAOQ,GAAKA,IAAMJ,KAC3CP,EAAa,IAAID,EAAWQ,MAE5BP,EAAaD,EAAUI,QAAOQ,GAAKA,IAAMJ,KACzCT,EAAc,IAAID,EAAYU,MAIlC,OACE1C,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAAE,SAAA,EACLH,EAAAA,EAAAA,MAACK,EAAAA,QAAI,CAACH,MAAO3B,EAAOyE,UAAU7C,SAAA,CAAC,QAAMc,EAAM,MAC3CjB,EAAAA,EAAAA,MAACiD,EAAAA,QAAY,CAAC/C,MAAO3B,EAAO2E,cAAc/C,SAAA,EAGxCH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAO4E,gBAAgBhD,SAAA,EAClCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO6E,YAAYjD,SAAC,WACjCH,EAAAA,EAAAA,MAACqD,EAAAA,QAAM,CACLC,cAAe9C,EACfN,MAAO3B,EAAOgF,OACdC,cAAgBC,IACdhC,EAASgC,GACTlC,EAAON,EAAKwC,EAAKtC,IACjBhB,SAAA,EAEFC,EAAAA,EAAAA,KAACiD,EAAAA,QAAAA,KAAW,CAACK,MAAM,eAAeC,MAAM,KACvCrC,GAASd,OAAOF,KAAKsD,IACpBxD,EAAAA,EAAAA,KAACiD,EAAAA,QAAAA,KAAW,CAAWK,MAAOE,EAAKD,MAAOC,GAAxBA,YAKxB5D,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAO4E,gBAAgBhD,SAAA,EAClCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO6E,YAAYjD,SAAC,YACjCH,EAAAA,EAAAA,MAACqD,EAAAA,QAAM,CACLC,cAAenC,EACfjB,MAAO3B,EAAOgF,OACdC,cAAgBC,IACd9B,EAAU8B,GACVlC,EAAON,EAAKT,EAAOiD,IACnBtD,SAAA,EAEFC,EAAAA,EAAAA,KAACiD,EAAAA,QAAAA,KAAW,CAACK,MAAM,gBAAgBC,MAAM,KACxCrC,GAASH,QAAQb,KAAKC,IACrBH,EAAAA,EAAAA,KAACiD,EAAAA,QAAAA,KAAW,CAAWK,MAAOG,OAAOtD,GAAMoD,MAAOE,OAAOtD,IAAvCA,YAKxBP,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOuF,eAAe3D,SAAA,EACjCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOwF,aAAa5D,SAAC,uBAElCH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOyF,YAAY7D,SAAA,EAC9BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO0F,gBAAgB9D,SAAC,iBACrCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO0F,gBAAgB9D,SAAC,WACrCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO0F,gBAAgB9D,SAAC,eAIvCH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAO2F,SAAS/D,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO0F,gBAAgB9D,SAAC,SACrCC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAO4F,UAAUhE,SAC3ByB,EAAUtB,KAAKiC,IACdnC,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAEfX,MAAO3B,EAAO6F,WACdtD,QAASA,IAAM8B,EAAUL,GAAG,GAAMpC,UAElCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOiB,WAAWW,SAAEoC,KAJ5BA,QAQXnC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAO4F,UAAUhE,SAC3B6B,EAAW1B,KAAKoC,IACftC,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAEfX,MAAO3B,EAAO6F,WACdtD,QAASA,IAAMiC,EAAWL,GAAG,GAAMvC,UAEnCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOiB,WAAWW,SAAEuC,KAJ5BA,WAWb1C,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAO2F,SAAS/D,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO0F,gBAAgB9D,SAAC,QACrCC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAO4F,UAAUhE,SAC3B2B,EAASxB,KAAKiC,IACbnC,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAEfX,MAAO,CAAC3B,EAAO6F,WAAY7F,EAAO8F,UAClCvD,QAASA,IAAM8B,EAAUL,GAAG,GAAOpC,UAEnCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOiB,WAAWW,SAAEoC,KAJ5BA,QAQXnC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAO4F,UAAUhE,SAC3B+B,EAAU5B,KAAKoC,IACdtC,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAEfX,MAAO,CAAC3B,EAAO6F,WAAY7F,EAAO8F,UAClCvD,QAASA,IAAMiC,EAAWL,GAAG,GAAOvC,UAEpCC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOiB,WAAWW,SAAEuC,KAJ5BA,cAWftC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAO+F,UAAUnE,UAC5BC,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CACfX,MAAO,CAAC3B,EAAOgG,aAAchG,EAAOiG,aACpC1D,QAASA,IAAMU,EAAUP,GAAKd,UAE9BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOiB,WAAWW,SAAC,wBAM1C,CAEA,MAAM5B,EAASC,EAAAA,QAAAA,OAAkB,CAC/B0E,cAAe,CACb7D,gBAAiB,OACjBoF,aAAc,GACdxF,QAAS,GACTP,OAAQ,GACRgG,YAAa,OACbC,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,GACfF,MAAO,IACPG,aAAc,EACdC,UAAW,EACXrG,YAAa,EACbC,YAAa,QAEfoE,UAAW,CACTvD,SAAU,GACVL,WAAY,OACZ6F,aAAc,GACdzE,MAAO,OACPtB,UAAW,UAEbiE,gBAAiB,CACf8B,aAAc,GACdnG,cAAe,MACfoG,WAAY,SACZC,IAAK,IAEP/B,YAAa,CACX3D,SAAU,GACVe,MAAO,OACPoE,MAAO,IAETrB,OAAQ,CACNsB,OAAQ,GACR7F,KAAM,EACNK,gBAAiB,UACjBoF,aAAc,GAEhBX,eAAgB,CACdsB,UAAW,GACXzG,YAAa,EACbC,YAAa,OACb6F,aAAc,EACdY,SAAU,UAEZtB,aAAc,CACZtE,SAAU,GACVL,WAAY,MACZH,QAAS,EACTI,gBAAiB,UACjBiG,kBAAmB,EACnB1G,YAAa,OACb4B,MAAO,QAETwD,YAAa,CACXlF,cAAe,MACfO,gBAAiB,UACjBiG,kBAAmB,EACnB1G,YAAa,OACbK,QAAS,GAEXiF,SAAU,CACRpF,cAAe,MACfyG,eAAgB,EAChB3G,YAAa,OACb4G,gBAAiB,EACjBC,kBAAmB,EACnBP,WAAY,cAEdjB,gBAAiB,CACfjF,KAAM,EACNI,WAAY,OACZoB,MAAO,QAET2D,UAAW,CACTnF,KAAM,EACNF,cAAe,MACf4G,SAAU,OACVP,IAAK,GAEPf,WAAY,CACV/E,gBAAiB,UACjBoG,kBAAmB,EACnBD,gBAAiB,EACjBf,aAAc,EACd/F,OAAQ,GAEV2F,SAAU,CACRhF,gBAAiB,QAEnBG,WAAY,CACVgB,MAAO,QACPpB,WAAY,OACZK,SAAU,IAEZ6E,UAAW,CACTc,UAAW,GACXtG,cAAe,MACf6G,eAAgB,UAElBpB,aAAc,CACZtF,QAAS,GACTwF,aAAc,EACdS,WAAY,SACZU,SAAU,KAEZpB,YAAa,CACXnF,gBAAiB,a,uBCjRN,SAASwG,GAAc,gBACpCC,EAAe,aACfC,EAAY,OACZnG,EAAM,QACNC,EACAmG,OAAQC,IAER,MAAOC,EAAeC,IAAoBzE,EAAAA,EAAAA,UAAS,KAC5C0E,EAAUC,IAAe3E,EAAAA,EAAAA,UAAS,UAkBzC,OACEtB,EAAAA,EAAAA,KAACkG,EAAAA,QAAK,CACJC,QAAST,EACTU,aAAa,EACbC,cAAc,OAAMtG,UAEpBC,EAAAA,EAAAA,KAACsG,EAAAA,QAAwB,CAAC5F,QAASA,IAAMmF,EAAW,GAAG,UAAU9F,UAC/DC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAOoI,QAAQxG,UAC1BC,EAAAA,EAAAA,KAACsG,EAAAA,QAAwB,CAAAvG,UACvBH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOqI,QAAQzG,SAAA,EAE1BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOsI,MAAM1G,SAAC,yBAC3BC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAOuI,SAAS3G,SAC1B4G,MAAMC,KAAK,CAAEC,OAAQlB,IAAgBzF,KAAI,CAAC4G,EAAGjG,KAC5Cb,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAEfX,MAAO,CAAC3B,EAAO4I,KAAMjB,EAAckB,SAASnG,IAAQ1C,EAAO8I,cAC3DvG,QAASA,KAAMwG,OAjCbC,EAiCwBtG,OAhCtCiF,EAAckB,SAASG,GACzBpB,EAAiBD,EAAc5D,QAAQkF,GAAMA,IAAMD,KAEnDpB,EAAiB,IAAID,EAAeqB,KAJpBA,OAiC6BpH,UAE/BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOkJ,WAAWtH,SAAEc,EAAM,KAJlCA,QAQXb,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOmJ,QAAQvH,SAAC,SAC7BC,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAO3B,EAAOoJ,cAAcxH,UAChCH,EAAAA,EAAAA,MAACqD,EAAAA,QAAM,CACLC,cAAe8C,EACf5C,cAAgBoE,GAAcvB,EAAYuB,GAAWzH,SAAA,EAErDC,EAAAA,EAAAA,KAACiD,EAAAA,QAAAA,KAAW,CAACK,MAAM,SAASC,MAAM,WACjC/D,EAAOU,KAAI,CAACE,EAAOS,KAClBb,EAAAA,EAAAA,KAACiD,EAAAA,QAAAA,KAAW,CAAWK,MAAOlD,EAAOmD,MAAOnD,GAA1BS,KAEnBpB,EAAQS,KAAI,CAACC,EAAKU,KACjBb,EAAAA,EAAAA,KAACiD,EAAAA,QAAAA,KAAW,CAAWK,MAAOnD,EAAIsH,WAAYlE,MAAOpD,EAAIsH,YAAvC5G,WAIxBb,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAACX,MAAO3B,EAAOuJ,YAAahH,QA9CrCiH,KACU,GAAxB7B,EAAce,QAA2B,UAAZb,IAC/B4B,QAAQC,IAAI,kBAAkB7B,eAAsBF,KACpDD,EAAYC,EAAeE,KA2C+CjG,UAChEC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO2J,UAAU/H,SAAC,sBAQ/C,CAEA,MAAM5B,EAASC,EAAAA,QAAAA,OAAkB,CAC/BmI,QAAS,CACP3H,KAAM,EACNK,gBAAiB,kBACjBsG,eAAgB,SAChBT,WAAY,UAEd0B,QAAS,CACPvH,gBAAiB,QACjBoF,aAAc,GACdxF,QAAS,GACT2F,MAAO,IACPM,WAAY,UAEdiD,YAAa,CACXC,UAAW,aACXnJ,QAAS,EACTwF,aAAc,EACdpF,gBAAiB,OACjB4F,aAAc,IAEhBoD,UAAW,CACT5I,SAAU,GACVL,WAAY,QAEdyH,MAAO,CACLpH,SAAU,GACVwF,aAAc,GACd7F,WAAY,QAEd0H,SAAU,CACRhI,cAAe,MACf4G,SAAU,OACVC,eAAgB,SAChBR,IAAK,IAEPgC,KAAM,CACJvC,MAAO,GACPC,OAAQ,GACRjG,YAAa,QACbD,YAAa,EACbD,OAAQ,EACRwG,WAAY,SACZS,eAAgB,UAElB0B,aAAc,CACZhI,gBAAiB,WAEnBoI,WAAY,CACVhI,SAAU,IAEZiI,QAAS,CACPtC,UAAW,GACX3F,SAAU,IAEZkI,cAAe,CACbhJ,YAAa,EACbC,YAAa,OACb0J,eAAgB,GAChB1D,MAAO,QAETkD,YAAa,CACXzI,gBAAiB,OACjBmG,gBAAiB,GACjBC,kBAAmB,GACnBhB,aAAc,EACdW,UAAW,IAEb8C,UAAW,CACTzI,SAAU,MC+Fd,MAAMlB,EAASC,EAAAA,QAAAA,OAAkB,CAC/BC,UAAW,CACTO,KAAM,EACNC,QAAS,IAEXsJ,kBAAmB,CACjBtD,aAAc,IAEhBuD,WAAY,CACV1J,cAAe,MACfoG,WAAY,SACZS,eAAgB,gBAChBV,aAAc,IAEhBwD,SAAU,CACRhJ,SAAU,GACVL,WAAY,OACZoB,MAAM,SAERkI,aAAc,CACZjJ,SAAU,GACVL,WAAY,OACZuJ,YAAa,IAEfC,qBAAsB,CACpB9J,cAAe,MACfoG,WAAY,UAGd2D,QAAS,CACP/J,cAAe,MACf6G,eAAgB,aAChBF,kBAAmB,GACnBL,UAAW,IAGb0D,YAAa,CACXjE,OAAQ,GACRD,MAAO,GACPhG,YAAa,OACbD,YAAa,EACb8F,aAAc,EACdvF,UAAW,SACX6J,iBAAkB,GAEpBC,QAAS,CACPpE,MAAO,IACPC,OAAQ,GACRxF,gBAAiB,UACjBoF,aAAc,GACdkB,eAAgB,SAChBT,WAAY,UAEd+D,cAAe,CACbrE,MAAO,GACPC,OAAQ,GACRxF,gBAAiB,UACjBoF,aAAc,GACdkB,eAAgB,SAChBT,WAAY,UAEdgE,YAAa,CACXzJ,SAAU,GACVL,WAAY,QAEd+J,UAAW,CACT1J,SAAU,GACVP,UAAW,SACXE,WAAY,OACZkJ,eAAgB,IAElBc,WAAY,CACVpK,KAAM,GAERqK,cAAe,CACbpE,aAAc,OC9TlBqE,EAAAA,EAAAA,UDFe,WACb,MAAOC,EAASC,IAAc9H,EAAAA,EAAAA,UAAS,IAChC+H,EAAgBC,IAAqBhI,EAAAA,EAAAA,UAAS,IAC9CoE,EAAiB6D,IAAkBjI,EAAAA,EAAAA,WAAS,IAC5CL,EAAeuI,IAAoBlI,EAAAA,EAAAA,UAAS,CAAC,IAC7CmI,EAAeC,IAAmBpI,EAAAA,EAAAA,UAAS,KAC3CqI,EAAgBC,IAAoBtI,EAAAA,EAAAA,UAAS,IAC9CuI,EAAc,CAAC,MAAO,QAAS,OAAQ,SAAU,SACjDC,EAAY,CAChB,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,IAEL9H,EAAAA,EAAAA,YAAU,KACR0H,EAAgB/C,MAAM0C,GAAgBU,KAAK,WAC3CH,EAAiBjD,MAAM0C,GAAgBU,KAAK,WAmD9C,WACE,IAAIC,EAAM,CAAC,EACX,IAAI,IAAI5C,EAAI,EAAGA,EAAIiC,EAAgBjC,IACjC4C,EAAI5C,GAAI,CACNhH,MAAO,CACL,IAAO,EACP,MAAS,EACT,KAAQ,EACR,OAAU,EACV,MAAS,GAEXW,OAAQ,CACN,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,IAIXyI,EAAiBQ,EACnB,CAvEEC,KACC,CAACZ,IAiBJ,MAQO9J,EAAQ2K,IAAa5I,EAAAA,EAAAA,UAAqB,IACjD,SAAS6I,EAAWpD,EAAMf,GACJoE,OAAAC,OAAA,GAAQpJ,GAA5B,IACIqJ,EAAarJ,EAAc8F,GAG/B,GAFAa,QAAQC,IAAI,uBAAuB0C,KAAKC,UAAUF,MAE/CT,EAAY7C,SAAShB,GACtB,IAAI,IAAI5F,KAASyJ,EAEbS,EAAWlK,MAAMA,GADhBA,IAAU4F,EACe,EAEA,OAI9B,IAAI,IAAIjF,KAAUqJ,OAAOK,KAAKX,GAE1BQ,EAAWvJ,OAAOA,GADjBA,IAAWiF,EACgB,EAEA,CAIpC,CAoGA,OA/CAhE,EAAAA,EAAAA,YAAU,MAIV,WACE,MAAM0I,EAAYb,EAAY3J,KAAIE,GACzBgK,OAAOK,KAAKX,GAAW5J,KAAIC,GACzB2J,EAAU3J,OAGrB+J,EAAUQ,EACZ,CAVEC,KACC,KA8CD/K,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOE,UAAU0B,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO4K,UAAUhJ,SAAC,YAE/BH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOgK,kBAAkBpI,SAAA,EACpCH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOiK,WAAWrI,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOmK,aAAavI,SAAC,cAClCH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOqK,qBAAqBzI,SAAA,EACvCC,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAACC,QAZHkK,IAAMxB,GAAWyB,GAAQC,KAAKC,IAAIF,EAAO,EAAG,KAYd/K,MAAO3B,EAAO0K,cAAc9I,UACvEC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO2K,YAAY/I,SAAC,SAEnCC,EAAAA,EAAAA,KAACgL,EAAAA,QAAS,CACRlL,MAAO3B,EAAOuK,YACduC,aAAa,UACb1H,MAAO4F,EAAQ1B,WACfyD,aAjDiBC,IAC3B,MAAMhL,EAAMiL,SAASD,IAAS,EAC9B/B,EAAW0B,KAAKO,IAAIP,KAAKC,IAAI5K,EAAK,GAAI,QAiD9BH,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAACC,QAtBH4K,IAAMlC,GAAWyB,GAAQC,KAAKO,IAAIR,EAAO,EAAG,KAsBd/K,MAAO3B,EAAO0K,cAAc9I,UACvEC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO2K,YAAY/I,SAAC,eAKvCH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOiK,WAAWrI,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOmK,aAAavI,SAAC,uBAClCH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO3B,EAAOqK,qBAAqBzI,SAAA,EACvCC,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAACC,QA5BL6K,IAAMjC,GAAkBuB,GAAQC,KAAKC,IAAIF,EAAO,EAAG,KA4BrB/K,MAAO3B,EAAO0K,cAAc9I,UACrEC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO2K,YAAY/I,SAAC,SAEnCC,EAAAA,EAAAA,KAACgL,EAAAA,QAAS,CACRlL,MAAO3B,EAAOuK,YACduC,aAAa,UACb1H,MAAO8F,EAAe5B,WACtByD,aA9DwBC,IAClC,MAAMhL,EAAMiL,SAASD,IAAS,EACxBK,EAAiBV,KAAKW,MAAM,GAAKtC,GACjCuC,EAAWZ,KAAKO,IAAIG,EAAgB,IACpCG,EAAeb,KAAKO,IAAIP,KAAKC,IAAI5K,EAAK,GAAIuL,GAChDpC,EAAkBqC,GAEdA,IAAiBD,GACnB9D,QAAQgE,KAAK,qCAAqCF,WAAkBvC,iBAwD9DnJ,EAAAA,EAAAA,KAACS,EAAAA,QAAgB,CAACC,QAtCLmL,IAAMvC,GAAkBuB,GAAQC,KAAKO,IAAIR,EAAO,EAAG,MAsCrB/K,MAAO3B,EAAO0K,cAAc9I,UACrEC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAO2K,YAAY/I,SAAC,kBAMzCC,EAAAA,EAAAA,KAACV,EAAe,CACZC,OAAQA,EACRC,OAAQqK,EACRpK,QAAS2K,OAAOK,KAAKX,GACrBpK,oBAAqBoK,EACrBnK,YAlLgBmM,CAACzL,EAAUC,EAAUyL,KAC3C7B,GAAU8B,IACR,MAAMtB,EAAY,IAAIsB,GAGtB,OAFAtB,EAAUrK,GAAY,IAAIqK,EAAUrK,IACpCqK,EAAUrK,GAAUC,GAAYyL,EACzBrB,SA+KP9K,EAAAA,EAAAA,MAACa,EAAAA,QAAgB,CAACC,QAnEtB,WACE6I,GAAe,EACjB,EAiEwCzJ,MAAO3B,EAAOyK,QAAQ7I,SAAA,EACxDC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACH,MAAO3B,EAAOkK,SAAStI,SAAC,cAC9BC,EAAAA,EAAAA,KAACyF,EAAa,CAACC,gBAAiBA,EAAiBC,aAAc0D,EAAgB7J,OAAQqK,EAAapK,QAAS2K,OAAOK,KAAKX,GAAYlE,OA/D3I,SAAuBqG,EAAOjG,GAC5B,IAAI,IAAIe,KAAQkF,EACd9B,EAAWpD,EAAMf,GAEnBuD,GAAe,EACjB,QA4DIvJ,EAAAA,EAAAA,KAACkM,EAAAA,QAAU,CAACC,YAAY,EAAMrM,MAAO,CAAEkF,UAAW,IAAMoH,sBAAuBjO,EAAOsK,QAAQ1I,SAC3FqK,OAAOK,KAAKxJ,GAAef,KAAI,CAAC6G,EAAMI,KACrCnH,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAAaC,MAAO3B,EAAO8K,cAAclJ,UAC5CC,EAAAA,EAAAA,KAACY,EAAa,CACZC,IAAKsG,EACL/G,MAAOqJ,EAActC,GACrBpG,OAAQ4I,EAAexC,GACvBjG,QAAS,CACPd,MAAOyJ,EACP9I,OAAQqJ,OAAOK,KAAKX,IAEtB7I,cAAeA,EAAc8F,GAC7B3F,UAAWA,IA9IvB,SAAoBP,GAClB,IAgBIwL,EAASjC,OAAAC,OAAA,GAAQpJ,GACjBmB,EAAK,IAAIqH,GACTlH,EAAK,IAAIoH,GACb0C,EAAUxL,GAnBK,CACbT,MAAO,CACL,IAAO,EACP,MAAS,EACT,KAAQ,EACR,OAAU,EACV,MAAS,GAEXW,OAAQ,CACN,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,IAOTyI,EAAiB6C,GACjBjK,EAAGvB,GAAO,SACV0B,EAAG1B,GAAO,SACV6I,EAAgBtH,GAChBwH,EAAiBrH,EAGnB,CAkH6B+J,CAAWnF,MAVrBA,SAqBrB,G,GEvPIoF,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,MCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASnG,EAAI,EAAGA,EAAI4F,EAASnG,OAAQO,IAAK,CAGzC,IAFA,IAAK+F,EAAUC,EAAIC,GAAYL,EAAS5F,GACpCoG,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAStG,OAAQ4G,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAajD,OAAOK,KAAK+B,EAAoBS,GAAGS,OAAOC,GAASnB,EAAoBS,EAAEU,GAAKR,EAASM,MAC9IN,EAASS,OAAOH,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASY,OAAOxG,IAAK,GACrB,IAAIyG,EAAIT,SACET,IAANkB,IAAiBX,EAASW,EAC/B,CACD,CACA,OAAOX,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIjG,EAAI4F,EAASnG,OAAQO,EAAI,GAAK4F,EAAS5F,EAAI,GAAG,GAAKiG,EAAUjG,IAAK4F,EAAS5F,GAAK4F,EAAS5F,EAAI,GACrG4F,EAAS5F,GAAK,CAAC+F,EAAUC,EAAIC,G,KCJ/Bb,EAAoBlK,EAAKuK,IACxB,IAAIiB,EAASjB,GAAUA,EAAOkB,WAC7B,IAAOlB,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoBwB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRtB,EAAoBwB,EAAI,CAACpB,EAASsB,KACjC,IAAI,IAAIP,KAAOO,EACX1B,EAAoB2B,EAAED,EAAYP,KAASnB,EAAoB2B,EAAEvB,EAASe,IAC5EvD,OAAOgE,eAAexB,EAASe,EAAK,CAAEU,YAAY,EAAMC,IAAKJ,EAAWP,MCJ3EnB,EAAoB2B,EAAI,CAACI,EAAKC,IAAUpE,OAAOqE,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFhC,EAAoBqB,EAAKjB,IACH,qBAAXgC,QAA0BA,OAAOC,aAC1CzE,OAAOgE,eAAexB,EAASgC,OAAOC,YAAa,CAAEtL,MAAO,WAE7D6G,OAAOgE,eAAexB,EAAS,aAAc,CAAErJ,OAAO,K,MCAvD,IAAIuL,EAAkB,CACrB,IAAK,GAaNtC,EAAoBS,EAAEQ,EAAKsB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGIzC,EAAUsC,GAHT5B,EAAUgC,EAAaC,GAAWF,EAGhB9H,EAAI,EAC3B,GAAG+F,EAASkC,MAAMC,GAAgC,IAAxBR,EAAgBQ,KAAa,CACtD,IAAI7C,KAAY0C,EACZ3C,EAAoB2B,EAAEgB,EAAa1C,KACrCD,EAAoBO,EAAEN,GAAY0C,EAAY1C,IAGhD,GAAG2C,EAAS,IAAIlC,EAASkC,EAAQ5C,EAClC,CAEA,IADGyC,GAA4BA,EAA2BC,GACrD9H,EAAI+F,EAAStG,OAAQO,IACzB2H,EAAU5B,EAAS/F,GAChBoF,EAAoB2B,EAAEW,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOvC,EAAoBS,EAAEC,IAG1BqC,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBE,QAAQT,EAAqBU,KAAK,KAAM,IAC3DH,EAAmBI,KAAOX,EAAqBU,KAAK,KAAMH,EAAmBI,KAAKD,KAAKH,G,KC7CvF,IAAIK,EAAsBpD,EAAoBS,OAAEN,EAAW,CAAC,MAAM,IAAOH,EAAoB,QAC7FoD,EAAsBpD,EAAoBS,EAAE2C,E","sources":["components/MatrixComponent.tsx","components/CardComponent.tsx","components/HintComponent.tsx","App.tsx","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst MatrixComponent = ({ matrix, colors, numbers, originalFrequencies, onCellPress }) => {\n  const handlePress = (rowIndex, colIndex, originalValue) => {\n    const currentValue = matrix[rowIndex][colIndex];\n    const newValue = currentValue > 0 ? currentValue - 1 : originalValue;\n    onCellPress(rowIndex, colIndex, newValue);\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Header row with numbers */}\n      <View style={styles.row}>\n        <Text style={[styles.cell, styles.headerCell]}>Color\\Num</Text>\n        {numbers.map(num => (\n          <Text key={`header-${num}`} style={[styles.cell, styles.headerCell]}>{num}</Text>\n        ))}\n      </View>\n      \n      {/* Data rows */}\n      {colors.map((color, rowIndex) => (\n        <View key={`row-${color}`} style={styles.row}>\n          <Text style={[styles.cell, styles.headerCell]}>{color}</Text>\n          {numbers.map((num, colIndex) => {\n            const originalValue = originalFrequencies[num];\n            const currentValue = matrix[rowIndex] ? matrix[rowIndex][colIndex] || 0 : 0;\n            \n            return (\n              <TouchableOpacity\n                key={`cell-${color}-${num}`}\n                style={[\n                  styles.cell,\n                  styles.buttonCell,\n                  currentValue === 0 && styles.zeroCell\n                ]}\n                onPress={() => handlePress(rowIndex, colIndex, originalValue)}\n              >\n                <Text style={styles.buttonText}>{currentValue}</Text>\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    padding: 8,\n    textAlign: 'center',\n    borderWidth: 1,\n    borderColor: '#eee',\n  },\n  headerCell: {\n    fontWeight: 'bold',\n    backgroundColor: '#f5f5f5',\n  },\n  buttonCell: {\n    backgroundColor: '#e3f2fd',\n  },\n  zeroCell: {\n    backgroundColor: '#ffebee',\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default MatrixComponent;","import React, { useState, useEffect } from 'react';\nimport {\n  SafeAreaView,\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Picker,\n} from 'react-native';\n\nexport default function CardComponent({\n  idx,\n  color: initialColor,\n  number: initialNumber,\n  probabilities = { color: {}, number: {} },\n  options,\n  update,\n  resetCard,\n}) {\n  const [color, setColor] = useState(initialColor || '');\n  const [number, setNumber] = useState(initialNumber || '');\n\n  const [yesColors, setYesColors] = useState([]);\n  const [noColors, setNoColors] = useState([]);\n  const [yesNumbers, setYesNumbers] = useState([]);\n  const [noNumbers, setNoNumbers] = useState([]);\n\n  useEffect(() => {\n    const yc = options.color.filter(c => probabilities.color?.[c] === 1);\n    const nc = options.color.filter(c => probabilities.color?.[c] === 0);\n    const yn = options.number.filter(n => probabilities.number?.[n] === 1);\n    const nn = options.number.filter(n => probabilities.number?.[n] === 0);\n\n    setYesColors(yc);\n    setNoColors(nc);\n    setYesNumbers(yn);\n    setNoNumbers(nn);\n  }, [probabilities, options]);\n\n  const moveColor = (c, fromYes) => {\n    if (fromYes) {\n      setYesColors(yesColors.filter(x => x !== c));\n      setNoColors([...noColors, c]);\n    } else {\n      setNoColors(noColors.filter(x => x !== c));\n      setYesColors([...yesColors, c]);\n    }\n  };\n\n  const moveNumber = (n, fromYes) => {\n    if (fromYes) {\n      setYesNumbers(yesNumbers.filter(x => x !== n));\n      setNoNumbers([...noNumbers, n]);\n    } else {\n      setNoNumbers(noNumbers.filter(x => x !== n));\n      setYesNumbers([...yesNumbers, n]);\n    }\n  };\n\n  return (\n    <View>\n    <Text style={styles.cardTitle}>Card {idx + 1}</Text>\n    <SafeAreaView style={styles.cardContainer}>\n      \n\n      <View style={styles.pickerContainer}>\n        <Text style={styles.pickerLabel}>Color</Text>\n        <Picker\n          selectedValue={color}\n          style={styles.picker}\n          onValueChange={(val) => {\n            setColor(val);\n            update(idx, val, number);\n          }}\n        >\n          <Picker.Item label=\"Select color\" value=\"\" />\n          {options?.color?.map((col) => (\n            <Picker.Item key={col} label={col} value={col} />\n          ))}\n        </Picker>\n      </View>\n\n      <View style={styles.pickerContainer}>\n        <Text style={styles.pickerLabel}>Number</Text>\n        <Picker\n          selectedValue={number}\n          style={styles.picker}\n          onValueChange={(val) => {\n            setNumber(val);\n            update(idx, color, val);\n          }}\n        >\n          <Picker.Item label=\"Select number\" value=\"\" />\n          {options?.number?.map((num) => (\n            <Picker.Item key={num} label={String(num)} value={String(num)} />\n          ))}\n        </Picker>\n      </View>\n\n      <View style={styles.tableContainer}>\n        <Text style={styles.sectionTitle}>Probability Table</Text>\n\n        <View style={styles.tableHeader}>\n          <Text style={styles.tableCellHeader}>Probability</Text>\n          <Text style={styles.tableCellHeader}>Color</Text>\n          <Text style={styles.tableCellHeader}>Number</Text>\n        </View>\n\n        {/* YES Row */}\n        <View style={styles.tableRow}>\n          <Text style={styles.tableCellHeader}>Yes</Text>\n          <View style={styles.tableCell}>\n            {yesColors.map((c) => (\n              <TouchableOpacity\n                key={c}\n                style={styles.probButton}\n                onPress={() => moveColor(c, true)}\n              >\n                <Text style={styles.buttonText}>{c}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n          <View style={styles.tableCell}>\n            {yesNumbers.map((n) => (\n              <TouchableOpacity\n                key={n}\n                style={styles.probButton}\n                onPress={() => moveNumber(n, true)}\n              >\n                <Text style={styles.buttonText}>{n}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </View>\n\n        {/* NO Row */}\n        <View style={styles.tableRow}>\n          <Text style={styles.tableCellHeader}>No</Text>\n          <View style={styles.tableCell}>\n            {noColors.map((c) => (\n              <TouchableOpacity\n                key={c}\n                style={[styles.probButton, styles.noButton]}\n                onPress={() => moveColor(c, false)}\n              >\n                <Text style={styles.buttonText}>{c}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n          <View style={styles.tableCell}>\n            {noNumbers.map((n) => (\n              <TouchableOpacity\n                key={n}\n                style={[styles.probButton, styles.noButton]}\n                onPress={() => moveNumber(n, false)}\n              >\n                <Text style={styles.buttonText}>{n}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </View>\n      </View>\n\n      <View style={styles.buttonRow}>\n        <TouchableOpacity\n          style={[styles.actionButton, styles.resetButton]}\n          onPress={() => resetCard(idx)}\n        >\n          <Text style={styles.buttonText}>Reset Card</Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 15,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    width: 270,\n    shadowRadius: 4,\n    elevation: 3,\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#333',\n    textAlign: 'center',\n  },\n  pickerContainer: {\n    marginBottom: 15,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n  },\n  pickerLabel: {\n    fontSize: 16,\n    color: '#555',\n    width: 50,\n  },\n  picker: {\n    height: 40,\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n  },\n  tableContainer: {\n    marginTop: 10,\n    borderWidth: 1,\n    borderColor: '#888',\n    borderRadius: 6,\n    overflow: 'hidden',\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    padding: 8,\n    backgroundColor: '#f7f7f7',\n    borderBottomWidth: 1,\n    borderColor: '#ccc',\n    color: '#333',\n  },\n  tableHeader: {\n    flexDirection: 'row',\n    backgroundColor: '#e0e0e0',\n    borderBottomWidth: 1,\n    borderColor: '#ccc',\n    padding: 6,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    borderTopWidth: 1,\n    borderColor: '#ddd',\n    paddingVertical: 6,\n    paddingHorizontal: 4,\n    alignItems: 'flex-start',\n  },\n  tableCellHeader: {\n    flex: 1,\n    fontWeight: 'bold',\n    color: '#222',\n  },\n  tableCell: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 4,\n  },\n  probButton: {\n    backgroundColor: '#4a90e2',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    margin: 2,\n  },\n  noButton: {\n    backgroundColor: '#aaa',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 13,\n  },\n  buttonRow: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  actionButton: {\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 100,\n  },\n  resetButton: {\n    backgroundColor: '#e74c3c',\n  },\n});\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Modal,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Picker\n} from 'react-native';\n\nexport default function HintComponent({\n  showHintDisplay,\n  number_cards,\n  colors,\n  numbers,\n  return: returnHint,\n}) {\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [hintType, setHintType] = useState('Select');\n\n  const toggleCard = (index) => {\n    if (selectedCards.includes(index)) {\n      setSelectedCards(selectedCards.filter((i) => i !== index));\n    } else {\n      setSelectedCards([...selectedCards, index]);\n    }\n  };\n\n  const handleApply = () => {\n    if (selectedCards.length != 0 && hintType != 'Select') {\n      console.log(`Applying hint: ${hintType} to cards: ${selectedCards}`);\n      returnHint( selectedCards, hintType );\n    }\n    \n  };\n\n  return (\n    <Modal\n      visible={showHintDisplay}\n      transparent={true}\n      animationType=\"fade\"\n    >\n      <TouchableWithoutFeedback onPress={() => returnHint([],\"Select\")}>\n        <View style={styles.overlay}>\n          <TouchableWithoutFeedback>\n            <View style={styles.hintBox}>\n\n              <Text style={styles.title}>The following cards</Text>\n              <View style={styles.cardGrid}>\n                {Array.from({ length: number_cards }).map((_, idx) => (\n                  <TouchableOpacity\n                    key={idx}\n                    style={[styles.card, selectedCards.includes(idx) && styles.cardSelected]}\n                    onPress={() => toggleCard(idx)}\n                  >\n                    <Text style={styles.cardNumber}>{idx + 1}</Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n              <Text style={styles.areText}>are</Text>\n              <View style={styles.pickerWrapper}>\n                <Picker\n                  selectedValue={hintType}\n                  onValueChange={(itemValue) => setHintType(itemValue)}\n                >\n                  <Picker.Item label=\"Select\" value=\"Select\" />\n                  {colors.map((color, idx) => (\n                    <Picker.Item key={idx} label={color} value={color} />\n                  ))}\n                  {numbers.map((num, idx) => (\n                    <Picker.Item key={idx} label={num.toString()} value={num.toString()} />\n                  ))}\n                </Picker>\n              </View>\n              <TouchableOpacity style={styles.applyButton} onPress={handleApply}>\n                <Text style={styles.applyText}>Apply</Text>\n              </TouchableOpacity>\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n      </TouchableWithoutFeedback>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hintBox: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    width: 300,\n    alignItems: 'center',\n  },\n  closeButton: {\n    alignSelf: 'flex-start',\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: '#ddd',\n    marginBottom: 10,\n  },\n  closeText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  title: {\n    fontSize: 18,\n    marginBottom: 10,\n    fontWeight: 'bold',\n  },\n  cardGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: 10,\n  },\n  card: {\n    width: 40,\n    height: 40,\n    borderColor: 'black',\n    borderWidth: 1,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  cardSelected: {\n    backgroundColor: '#cce5ff',\n  },\n  cardNumber: {\n    fontSize: 16,\n  },\n  areText: {\n    marginTop: 10,\n    fontSize: 18,\n  },\n  pickerWrapper: {\n    borderWidth: 1,\n    borderColor: '#000',\n    marginVertical: 10,\n    width: '100%',\n  },\n  applyButton: {\n    backgroundColor: '#ddd',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginTop: 10,\n  },\n  applyText: {\n    fontSize: 16,\n  },\n});\n","import { useState, useEffect, use } from 'react';\nimport { Platform, StyleSheet, ScrollView, TextInput, Text, View, TouchableOpacity } from 'react-native';\nimport MatrixComponent from './components/MatrixComponent';\nimport CardComponent from './components/CardComponent';\nimport HintComponent from './components/HintComponent';\nexport default function App() {\n  const [players, setPlayers] = useState(5);\n  const [cardsPerPlayer, setCardsPerPlayer] = useState(5);\n  const [showHintDisplay, setHintDisplay] = useState(false);\n  const [probabilities, setProbabilities] = useState({});\n  const [chosen_colors, setChosenColors] = useState([]);\n  const [chosen_numbers, setChosenNumbers] = useState([]);\n  const card_colors = ['Red', 'Green', 'Blue', 'Yellow', 'White'];\n  const card_freq = {\n    1: 3,\n    2: 2,\n    3: 2,\n    4: 2,\n    5: 1\n  };\n  useEffect(() => {\n    setChosenColors(Array(cardsPerPlayer).fill(\"Select\"));\n    setChosenNumbers(Array(cardsPerPlayer).fill(\"Select\"));    \n    load_tables();\n  }, [cardsPerPlayer]);\n\n  function apply_change(type, idx, value){\n    if(type === \"color\"){\n      setChosenColors(prev => {\n        const newColors = [...prev];\n        newColors[idx] = value;\n        return newColors;\n      });\n    }else{\n      setChosenNumbers(prev => {\n        const newNumbers = [...prev];\n        newNumbers[idx] = value;\n        return newNumbers;\n      });\n    }\n  }\n  const handleCellPress = (rowIndex, colIndex, newValue) => {\n    setMatrix(prevMatrix => {\n      const newMatrix = [...prevMatrix];\n      newMatrix[rowIndex] = [...newMatrix[rowIndex]];\n      newMatrix[rowIndex][colIndex] = newValue;\n      return newMatrix;\n    });\n  };\n  const [matrix, setMatrix] = useState<number[][]>([]);\n  function apply_hint(card, hintType) {\n    let newProbabilities = { ...probabilities };\n    let card_probs = probabilities[card];\n    console.log(`Card Probabilities: ${JSON.stringify(card_probs)}`);\n\n    if(card_colors.includes(hintType)){\n      for(let color of card_colors){\n        if(color === hintType){\n          card_probs.color[color] = 1;\n        }else{\n          card_probs.color[color] = 0;\n        }\n      }\n    }else{\n      for(let number of Object.keys(card_freq)){\n        if(number === hintType){\n          card_probs.number[number] = 1;\n        }else{\n          card_probs.number[number] = 0;\n        }\n      }\n    }\n  }\n  function load_tables(){\n    var arr = {};\n    for(let i = 0; i < cardsPerPlayer; i++){  \n      arr[i] ={\n        color: {\n          \"Red\": 0,\n          \"Green\": 0,\n          \"Blue\": 0,\n          \"Yellow\": 0,\n          \"White\": 0\n        },\n        number: {\n          \"1\": 0,\n          \"2\": 0,\n          \"3\": 0,\n          \"4\": 0,\n          \"5\": 0\n        }\n      }\n    }\n    setProbabilities(arr);\n  }\n  function reset_card(idx){\n    let new_prob = {\n      color: {\n        \"Red\": 0,\n        \"Green\": 0,\n        \"Blue\": 0,\n        \"Yellow\": 0,\n        \"White\": 0\n      },\n      number: {\n        \"1\": 0,\n        \"2\": 0,\n        \"3\": 0,\n        \"4\": 0,\n        \"5\": 0\n      }\n    };\n    let new_probs = { ...probabilities };\n    let nc = [...chosen_colors];\n    let nn = [...chosen_numbers];\n    new_probs[idx] = new_prob;\n    setProbabilities(new_probs);\n    nc[idx] = \"Select\";\n    nn[idx] = \"Select\";\n    setChosenColors(nc);\n    setChosenNumbers(nn);\n\n\n  }\n\n  useEffect(() => {\n    loadMatrix();\n  }, []);\n\n  function loadMatrix() {\n    const newMatrix = card_colors.map(color => {\n      return Object.keys(card_freq).map(num => {\n        return card_freq[num as unknown as keyof typeof card_freq];\n      });\n    });\n    setMatrix(newMatrix);\n  }\n\n  const handlePlayersChange = (text: string) => {\n    const num = parseInt(text) || 2; \n    setPlayers(Math.min(Math.max(num, 2), 5)); \n  };\n\n  const handleCardsPerPlayerChange = (text: string) => {\n    const num = parseInt(text) || 4;\n    const theoreticalMax = Math.floor(50 / players);\n    const maxCards = Math.min(theoreticalMax, 10);\n    const clampedValue = Math.min(Math.max(num, 4), maxCards);\n    setCardsPerPlayer(clampedValue);\n    \n    if (clampedValue === maxCards) {\n      console.warn(`Maximum cards per player reached (${maxCards}) with ${players} players`);\n    }\n  };\n  function addHint(){\n    setHintDisplay(true); \n  }\n\n\n\n  function complete_hint(cards, hintType) {\n    for(let card of cards){\n      apply_hint(card, hintType);\n    }\n    setHintDisplay(false);\n  }\n  \n  const incrementPlayers = () => setPlayers(prev => Math.min(prev + 1, 5));\n  const decrementPlayers = () => setPlayers(prev => Math.max(prev - 1, 2));\n  const incrementCards = () => setCardsPerPlayer(prev => Math.min(prev + 1, 10));\n  const decrementCards = () => setCardsPerPlayer(prev => Math.max(prev - 1, 4));\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.mainTitle}>Hanabi</Text>\n      \n      <View style={styles.settingsContainer}>\n        <View style={styles.settingRow}>\n          <Text style={styles.settingLabel}>Players:</Text>\n          <View style={styles.numberInputContainer}>\n            <TouchableOpacity onPress={decrementPlayers} style={styles.controlButton}>\n              <Text style={styles.controlText}>-</Text>\n            </TouchableOpacity>\n            <TextInput\n              style={styles.numberInput}\n              keyboardType=\"numeric\"\n              value={players.toString()}\n              onChangeText={handlePlayersChange}\n            />\n            <TouchableOpacity onPress={incrementPlayers} style={styles.controlButton}>\n              <Text style={styles.controlText}>+</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <View style={styles.settingRow}>\n          <Text style={styles.settingLabel}>Cards per Player:</Text>\n          <View style={styles.numberInputContainer}>\n            <TouchableOpacity onPress={decrementCards} style={styles.controlButton}>\n              <Text style={styles.controlText}>-</Text>\n            </TouchableOpacity>\n            <TextInput\n              style={styles.numberInput}\n              keyboardType=\"numeric\"\n              value={cardsPerPlayer.toString()}\n              onChangeText={handleCardsPerPlayerChange}\n            />\n            <TouchableOpacity onPress={incrementCards} style={styles.controlButton}>\n              <Text style={styles.controlText}>+</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <MatrixComponent \n          matrix={matrix} \n          colors={card_colors} \n          numbers={Object.keys(card_freq)} \n          originalFrequencies={card_freq}\n          onCellPress={handleCellPress}\n        />\n      <TouchableOpacity onPress={addHint} style={styles.hintBtn}>\n        <Text style={styles.hintText}>Add Hint</Text>\n        <HintComponent showHintDisplay={showHintDisplay} number_cards={cardsPerPlayer} colors={card_colors} numbers={Object.keys(card_freq)} return={complete_hint}/>\n      </TouchableOpacity>\n      <ScrollView horizontal={true} style={{ marginTop: 20 }} contentContainerStyle={styles.cardHdr}>\n        {Object.keys(probabilities).map((card, index) => (\n          <View key={index} style={styles.deckContainer}>\n            <CardComponent\n              idx={index}\n              color={chosen_colors[index]}\n              number={chosen_numbers[index]}\n              options={{\n                color: card_colors,\n                number: Object.keys(card_freq)\n              }}\n              probabilities={probabilities[card]}\n              resetCard={() => reset_card(index)}\n\n            />\n          </View>\n        ))}\n      </ScrollView>\n\n      \n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  settingsContainer: {\n    marginBottom: 20,\n  },\n  settingRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  hintText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color:'white',\n  },\n  settingLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginRight: 10,\n  },\n  numberInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  cardHdr: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 10,\n    marginTop: 20,\n  },\n\n  numberInput: {\n    height: 40,\n    width: 50,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 4,\n    textAlign: 'center',\n    marginHorizontal: 5,\n  },\n  hintBtn: {\n    width: 140,\n    height: 60,\n    backgroundColor: '#a0a0ff',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  controlButton: {\n    width: 40,\n    height: 40,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  controlText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  mainTitle: {\n    fontSize: 32,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginVertical: 16,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  deckContainer: {\n    marginBottom: 20,\n  },\n});","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [362], () => (__webpack_require__(3954)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","container","margin","borderWidth","borderColor","row","flexDirection","cell","flex","padding","textAlign","headerCell","fontWeight","backgroundColor","buttonCell","zeroCell","buttonText","fontSize","MatrixComponent","matrix","colors","numbers","originalFrequencies","onCellPress","_jsxs","View","style","children","_jsx","Text","map","num","color","rowIndex","colIndex","originalValue","currentValue","TouchableOpacity","onPress","handlePress","CardComponent","idx","initialColor","number","initialNumber","probabilities","options","update","resetCard","setColor","useState","setNumber","yesColors","setYesColors","noColors","setNoColors","yesNumbers","setYesNumbers","noNumbers","setNoNumbers","useEffect","yc","filter","c","nc","yn","n","nn","moveColor","fromYes","x","moveNumber","cardTitle","SafeAreaView","cardContainer","pickerContainer","pickerLabel","Picker","selectedValue","picker","onValueChange","val","label","value","col","String","tableContainer","sectionTitle","tableHeader","tableCellHeader","tableRow","tableCell","probButton","noButton","buttonRow","actionButton","resetButton","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginBottom","alignItems","gap","marginTop","overflow","borderBottomWidth","borderTopWidth","paddingVertical","paddingHorizontal","flexWrap","justifyContent","minWidth","HintComponent","showHintDisplay","number_cards","return","returnHint","selectedCards","setSelectedCards","hintType","setHintType","Modal","visible","transparent","animationType","TouchableWithoutFeedback","overlay","hintBox","title","cardGrid","Array","from","length","_","card","includes","cardSelected","toggleCard","index","i","cardNumber","areText","pickerWrapper","itemValue","toString","applyButton","handleApply","console","log","applyText","closeButton","alignSelf","closeText","marginVertical","settingsContainer","settingRow","hintText","settingLabel","marginRight","numberInputContainer","cardHdr","numberInput","marginHorizontal","hintBtn","controlButton","controlText","mainTitle","scrollView","deckContainer","registerRootComponent","players","setPlayers","cardsPerPlayer","setCardsPerPlayer","setHintDisplay","setProbabilities","chosen_colors","setChosenColors","chosen_numbers","setChosenNumbers","card_colors","card_freq","fill","arr","load_tables","setMatrix","apply_hint","Object","assign","card_probs","JSON","stringify","keys","newMatrix","loadMatrix","decrementPlayers","prev","Math","max","TextInput","keyboardType","onChangeText","text","parseInt","min","incrementPlayers","decrementCards","theoreticalMax","floor","maxCards","clampedValue","warn","incrementCards","handleCellPress","newValue","prevMatrix","cards","ScrollView","horizontal","contentContainerStyle","new_probs","reset_card","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}